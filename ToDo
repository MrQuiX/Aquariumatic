To do list

29/01/2016

-work out how to return information from the server and display in the web page
The server.py will receive temp/pH/status information from the Arduino (i2c slave) to be displayed on the screen

-add i2c coding to functions.py
Use to pad out the two send functions, and also add code for polling the i2c to create a device list, and also 
one for reading incoming commands

-test gmail coding in functions.py

-start writing arduino code
setup as i2c slave, define the relay pins and the pins for digital temp and pH sensors.
retrieve pH/temp thresholds (from either i2c master or from EEPROM)
Loop to read temp/pH - update screen and react if any discrepency (trigger heater is temp under threshold, send alert ot i2c 
master to email alert etc)
Loop to monitor i2c for instruction (requests for temp/pH, commands to switch on light/heater relays etc, updated thresholds)


Old script from tank.html - not working!
<script>
function aq_request(){
    var hr; 
    if (window.XMLHttpRequest) 
        hr = new XMLHttpRequest(); 
    else if (window.ActiveXObject) 
        hr = new ActiveXObject("Msxml2.XMLHTTP");
    else 
        throw new Error("Ajax is not supported by your browser");

    var url = "server.py";
    // Set content type header information for sending url encoded variables in the request
    hr.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
    // Access the onreadystatechange event for the XMLHttpRequest object
    hr.onreadystatechange = function() {
    	if (hr.readyState < 4)
            document.getElementById('div1').innerHTML = "Loading...";
        else if (hr.readyState === 4) {
        	if (hr.status == 200 && hr.status < 300) 
                	document.getElementById('status').innerHTML = hr.responseText;
	    }
    }
    // Send the data to PHP now... and wait for response to update the status div
    hr.open("POST", url, true);
    hr.send(null); // Actually execute the request
    //document.getElementById("status").innerHTML = "processing...";
}
</script>
